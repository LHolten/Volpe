use std::str::FromStr;

grammar;

pub Expr = (Stmt ";")* <Stmt> ";"?;
Stmt = (App "=")* <App>;

Column = (Row ";")* <Row> ";"?;
Row = (App ",")* <App>;

Obj = (Entry ";")* <Entry> ";"?;
Entry = App ":" <App>;

App = Or* <Or>;

Or = (And "||")* <And>;

And = (Cmp "&&")* <Cmp>;

Cmp = (Comparable CmpSym)* <Comparable>;
CmpSym = {"==", "!=", "<", ">", "<=", ">="};
Comparable = {Add, BinOr, BinXor, Shift, Func};

Add = (Mul_ AddSym)+ <Mul_>;
AddSym = {"+", "-"};

Mul = (Func MulSym)+ <Func>;
Mul_ = (Func MulSym)* <Func>;
MulSym = {"*", "/", "%"};

BinOr = (BinAnd_ "|")+ <BinAnd_>;
BinAnd = (Func "&")+ <Func>;
BinAnd_ = (Func "&")* <Func>;

BinXor = (Func "^")+ <Func>;

Shift = (Func ShiftSym)+ <Func>;
ShiftSym = {"<<", ">>"};

Func = (Term ".")* <Term>;

Term = {
    Num,
    Ident,
    "(" <Expr> ")",
    "[" <Column> "]",
    "{" <Obj> "}",
};

Ident = r"[_a-zA-Z][_a-zA-Z0-9]*";

Num = r"[0-9]+";