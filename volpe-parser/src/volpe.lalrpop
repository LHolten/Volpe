use std::str::FromStr;
use crate::ast::*;

grammar;

pub Expr = (Stmt ";")* <Stmt> ";"?;
Stmt = (App "=")* <App>;

Column = (Row ";")* <Row> ";"?;
Row = (App ",")* <App>;

Obj = (Entry ",")* <Entry> ","?;
Entry = App ":" <App>;

App = Or_* <Or_>;

Or_ = (And_ "||")* <And_>;
And_ = (Applicable "&&")* <Applicable>;

Applicable = {Equal, Cmp, Equable};

Equal = (Equable EqualSym)+ <Equable>;
EqualSym = {"==", "!="};
Equable = {BitOr, BitXor, Shift, Comparable}

Cmp = (Comparable CmpSym)+ <Comparable>;
CmpSym = {"<", ">", "<=", ">="};
Comparable = {Add, Func};

Add = (Mul_ AddSym)+ <Mul_>;
AddSym = {"+", "-"};

Mul = (Func MulSym)+ <Func>;
Mul_ = (Func MulSym)* <Func>;
MulSym = {"*", "/", "%"};

BitOr = (BitAnd_ "|")+ <BitAnd_>;
BitAnd = (Func "&")+ <Func>;
BitAnd_ = (Func "&")* <Func>;

BitXor = (Func "^")+ <Func>;

Shift = (Func ShiftSym)+ <Func>;
ShiftSym = {"<<", ">>"};

Func = (Term ".")* <Term>;

Term = {
    Num,
    Ident,
    "(" <Expr> ")",
    "[" <Column> "]",
    "{" <Obj> "}",
};

Ident = r"[_a-zA-Z][_a-zA-Z0-9]*";

Num = r"[0-9]+";