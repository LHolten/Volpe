# recursive factorial of x
factorial := (x,) {
    x < 2 -> 1
    x * @(x - 1,)
}

# using block to calculate e
e := {
    # e := sum of 1 / i! for each i -> inf
    precision := 10
    calc_e := (e, i) {
        # exit condition
        i >= precision -> e
        # calculate next term
        term := 1.0 / factorial(i,).0
        # recursively call self with updated args
        @(e + term, i + 1)
    }
    # call the function and return the result
    calc_e(0.0, 0)
}

# return e
e