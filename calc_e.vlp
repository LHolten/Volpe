factorial = x => {
    x < 2 -> :> 1
    :> x * @(x - 1) 
}

recursive_calc_e = (e, n) => {
    # output result
    n == 0 -> :> e

    # get next term (working backwards)
    term = 1.0 / ~factorial(n)

    # add onto result
    :> @(e + term, n - 1)
}

calculate_e = n => {
    # asserts that n is positive
    # also that it is an int (during compilation)
    n >= 0
    :> recursive_calc_e(1.0, n)
}

e = calculate_e(10)

:> e
